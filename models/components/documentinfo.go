// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/buildwithdeck/sdk-go/internal/utils"
	"time"
)

type DocumentInfo struct {
	DocumentID string            `json:"document_id"`
	FileType   string            `json:"file_type"`
	Metadata   map[string]string `json:"metadata,omitempty"`
	FileName   *string           `json:"file_name,omitempty"`
	FileSize   *int64            `json:"file_size,omitempty"`
	FetchDate  *time.Time        `json:"fetch_date,omitempty"`
}

func (d DocumentInfo) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(d, "", false)
}

func (d *DocumentInfo) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &d, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *DocumentInfo) GetDocumentID() string {
	if o == nil {
		return ""
	}
	return o.DocumentID
}

func (o *DocumentInfo) GetFileType() string {
	if o == nil {
		return ""
	}
	return o.FileType
}

func (o *DocumentInfo) GetMetadata() map[string]string {
	if o == nil {
		return nil
	}
	return o.Metadata
}

func (o *DocumentInfo) GetFileName() *string {
	if o == nil {
		return nil
	}
	return o.FileName
}

func (o *DocumentInfo) GetFileSize() *int64 {
	if o == nil {
		return nil
	}
	return o.FileSize
}

func (o *DocumentInfo) GetFetchDate() *time.Time {
	if o == nil {
		return nil
	}
	return o.FetchDate
}
