// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// UpdateMode - Information about the source, if using Link in Update mode.
type UpdateMode struct {
	// When using Link in Update mode, this contains information about the original data source for which we are updating the connection.
	Source LinkSourcesResponseSource `json:"source"`
}

func (o *UpdateMode) GetSource() LinkSourcesResponseSource {
	if o == nil {
		return LinkSourcesResponseSource{}
	}
	return o.Source
}

// Mode - Indicates the mode in which the Link widget should run
type Mode string

const (
	ModeNormal                 Mode = "Normal"
	ModeUpdateCredentials      Mode = "UpdateCredentials"
	ModeRefresh                Mode = "Refresh"
	ModeUpdateAccountSelection Mode = "UpdateAccountSelection"
)

func (e Mode) ToPointer() *Mode {
	return &e
}
func (e *Mode) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Normal":
		fallthrough
	case "UpdateCredentials":
		fallthrough
	case "Refresh":
		fallthrough
	case "UpdateAccountSelection":
		*e = Mode(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Mode: %v", v)
	}
}

type LinkClientInfoResponse struct {
	// Client name to display. If the client did not set his name yet, this property will be NULL and a default name should be displayed in that case.
	Name *string `json:"name,omitempty"`
	// Client logo URL to display.
	ImageURL *string `json:"image_url,omitempty"`
	// The language that Link should be displayed in.
	Language *LanguageEnum `json:"language,omitempty"`
	// Information about the source, if using Link in Update mode.
	UpdateMode *UpdateMode `json:"update_mode,omitempty"`
	// Your terms of use to be accepted by the end-user
	TermsOfUseURL *string `json:"terms_of_use_url,omitempty"`
	// Your privacy policy to be accepted by the end-user
	PrivacyPolicyURL *string `json:"privacy_policy_url,omitempty"`
	// Indicates the mode in which the Link widget should run
	Mode *Mode `json:"mode,omitempty"`
	// Indicates the mode to select accounts
	AccountSelectMode *AccountSelectModeEnum `json:"account_select_mode,omitempty"`
	// Indicates if the Link User should be able to upload documents by himself in Link
	AllowDocumentUpload *bool `json:"allow_document_upload,omitempty"`
	// Indicates if link widget should show the consent screen
	ShowStepConsent *bool `json:"show_step_consent,omitempty"`
	// Indicates if link widget should show the add source screen
	ShowStepAddSource *bool `json:"show_step_add_source,omitempty"`
	// Indicates if link widget should show the account selection screen
	ShowStepSelectAccount *bool `json:"show_step_select_account,omitempty"`
	// Indicates if link widget should show the add account screen
	ShowStepAddAccount *bool `json:"show_step_add_account,omitempty"`
}

func (o *LinkClientInfoResponse) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *LinkClientInfoResponse) GetImageURL() *string {
	if o == nil {
		return nil
	}
	return o.ImageURL
}

func (o *LinkClientInfoResponse) GetLanguage() *LanguageEnum {
	if o == nil {
		return nil
	}
	return o.Language
}

func (o *LinkClientInfoResponse) GetUpdateMode() *UpdateMode {
	if o == nil {
		return nil
	}
	return o.UpdateMode
}

func (o *LinkClientInfoResponse) GetTermsOfUseURL() *string {
	if o == nil {
		return nil
	}
	return o.TermsOfUseURL
}

func (o *LinkClientInfoResponse) GetPrivacyPolicyURL() *string {
	if o == nil {
		return nil
	}
	return o.PrivacyPolicyURL
}

func (o *LinkClientInfoResponse) GetMode() *Mode {
	if o == nil {
		return nil
	}
	return o.Mode
}

func (o *LinkClientInfoResponse) GetAccountSelectMode() *AccountSelectModeEnum {
	if o == nil {
		return nil
	}
	return o.AccountSelectMode
}

func (o *LinkClientInfoResponse) GetAllowDocumentUpload() *bool {
	if o == nil {
		return nil
	}
	return o.AllowDocumentUpload
}

func (o *LinkClientInfoResponse) GetShowStepConsent() *bool {
	if o == nil {
		return nil
	}
	return o.ShowStepConsent
}

func (o *LinkClientInfoResponse) GetShowStepAddSource() *bool {
	if o == nil {
		return nil
	}
	return o.ShowStepAddSource
}

func (o *LinkClientInfoResponse) GetShowStepSelectAccount() *bool {
	if o == nil {
		return nil
	}
	return o.ShowStepSelectAccount
}

func (o *LinkClientInfoResponse) GetShowStepAddAccount() *bool {
	if o == nil {
		return nil
	}
	return o.ShowStepAddAccount
}
