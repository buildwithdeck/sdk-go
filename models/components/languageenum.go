// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type LanguageEnum string

const (
	LanguageEnumEn LanguageEnum = "EN"
	LanguageEnumEs LanguageEnum = "ES"
	LanguageEnumFr LanguageEnum = "FR"
	LanguageEnumDe LanguageEnum = "DE"
	LanguageEnumIt LanguageEnum = "IT"
	LanguageEnumPt LanguageEnum = "PT"
	LanguageEnumNl LanguageEnum = "NL"
	LanguageEnumPl LanguageEnum = "PL"
	LanguageEnumSv LanguageEnum = "SV"
	LanguageEnumDa LanguageEnum = "DA"
	LanguageEnumNo LanguageEnum = "NO"
	LanguageEnumEt LanguageEnum = "ET"
	LanguageEnumLt LanguageEnum = "LT"
	LanguageEnumLv LanguageEnum = "LV"
	LanguageEnumRo LanguageEnum = "RO"
)

func (e LanguageEnum) ToPointer() *LanguageEnum {
	return &e
}
func (e *LanguageEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "EN":
		fallthrough
	case "ES":
		fallthrough
	case "FR":
		fallthrough
	case "DE":
		fallthrough
	case "IT":
		fallthrough
	case "PT":
		fallthrough
	case "NL":
		fallthrough
	case "PL":
		fallthrough
	case "SV":
		fallthrough
	case "DA":
		fallthrough
	case "NO":
		fallthrough
	case "ET":
		fallthrough
	case "LT":
		fallthrough
	case "LV":
		fallthrough
	case "RO":
		*e = LanguageEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LanguageEnum: %v", v)
	}
}
