// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type ScrapingStatusEnum string

const (
	ScrapingStatusEnumNew                              ScrapingStatusEnum = "New"
	ScrapingStatusEnumConnecting                       ScrapingStatusEnum = "Connecting"
	ScrapingStatusEnumCredentialsSent                  ScrapingStatusEnum = "CredentialsSent"
	ScrapingStatusEnumInvalidCredentials               ScrapingStatusEnum = "InvalidCredentials"
	ScrapingStatusEnumConnectedCredentials             ScrapingStatusEnum = "ConnectedCredentials"
	ScrapingStatusEnumSecurityAnswerRequired           ScrapingStatusEnum = "SecurityAnswerRequired"
	ScrapingStatusEnumSecurityAnswerInvalid            ScrapingStatusEnum = "SecurityAnswerInvalid"
	ScrapingStatusEnumSecurityQuestionTimeout          ScrapingStatusEnum = "SecurityQuestionTimeout"
	ScrapingStatusEnumMfaMethodChoiceRequired          ScrapingStatusEnum = "MfaMethodChoiceRequired"
	ScrapingStatusEnumMfaCodeRequired                  ScrapingStatusEnum = "MfaCodeRequired"
	ScrapingStatusEnumMfaCodeInvalid                   ScrapingStatusEnum = "MfaCodeInvalid"
	ScrapingStatusEnumMfaCodeTimeout                   ScrapingStatusEnum = "MfaCodeTimeout"
	ScrapingStatusEnumMfaActionRequired                ScrapingStatusEnum = "MfaActionRequired"
	ScrapingStatusEnumBlockedByPin                     ScrapingStatusEnum = "BlockedByPin"
	ScrapingStatusEnumAccountSelectionRequired         ScrapingStatusEnum = "AccountSelectionRequired"
	ScrapingStatusEnumWaitingForJob                    ScrapingStatusEnum = "WaitingForJob"
	ScrapingStatusEnumExecutingJob                     ScrapingStatusEnum = "ExecutingJob"
	ScrapingStatusEnumCompletedJob                     ScrapingStatusEnum = "CompletedJob"
	ScrapingStatusEnumRetryLater                       ScrapingStatusEnum = "RetryLater"
	ScrapingStatusEnumDataFound                        ScrapingStatusEnum = "DataFound"
	ScrapingStatusEnumConnectedWaitingOnDataExtraction ScrapingStatusEnum = "ConnectedWaitingOnDataExtraction"
	ScrapingStatusEnumNoDataFound                      ScrapingStatusEnum = "NoDataFound"
	ScrapingStatusEnumNoStatement                      ScrapingStatusEnum = "NoStatement"
	ScrapingStatusEnumError                            ScrapingStatusEnum = "Error"
)

func (e ScrapingStatusEnum) ToPointer() *ScrapingStatusEnum {
	return &e
}
func (e *ScrapingStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "New":
		fallthrough
	case "Connecting":
		fallthrough
	case "CredentialsSent":
		fallthrough
	case "InvalidCredentials":
		fallthrough
	case "ConnectedCredentials":
		fallthrough
	case "SecurityAnswerRequired":
		fallthrough
	case "SecurityAnswerInvalid":
		fallthrough
	case "SecurityQuestionTimeout":
		fallthrough
	case "MfaMethodChoiceRequired":
		fallthrough
	case "MfaCodeRequired":
		fallthrough
	case "MfaCodeInvalid":
		fallthrough
	case "MfaCodeTimeout":
		fallthrough
	case "MfaActionRequired":
		fallthrough
	case "BlockedByPin":
		fallthrough
	case "AccountSelectionRequired":
		fallthrough
	case "WaitingForJob":
		fallthrough
	case "ExecutingJob":
		fallthrough
	case "CompletedJob":
		fallthrough
	case "RetryLater":
		fallthrough
	case "DataFound":
		fallthrough
	case "ConnectedWaitingOnDataExtraction":
		fallthrough
	case "NoDataFound":
		fallthrough
	case "NoStatement":
		fallthrough
	case "Error":
		*e = ScrapingStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ScrapingStatusEnum: %v", v)
	}
}
