// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/buildwithdeck/sdk-go/internal/utils"
	"time"
)

type WebhookEventTypeResponse struct {
	ID              string          `json:"id"`
	EventCode       string          `json:"event_code"`
	EventType       WebhookTypeEnum `json:"event_type"`
	DisplayName     string          `json:"display_name"`
	Description     string          `json:"description"`
	IsActive        *bool           `json:"is_active,omitempty"`
	DeprecatedOnUtc *time.Time      `json:"deprecated_on_utc,omitempty"`
}

func (w WebhookEventTypeResponse) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(w, "", false)
}

func (w *WebhookEventTypeResponse) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &w, "", false, []string{"id", "event_code", "event_type", "display_name", "description"}); err != nil {
		return err
	}
	return nil
}

func (o *WebhookEventTypeResponse) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *WebhookEventTypeResponse) GetEventCode() string {
	if o == nil {
		return ""
	}
	return o.EventCode
}

func (o *WebhookEventTypeResponse) GetEventType() WebhookTypeEnum {
	if o == nil {
		return WebhookTypeEnum("")
	}
	return o.EventType
}

func (o *WebhookEventTypeResponse) GetDisplayName() string {
	if o == nil {
		return ""
	}
	return o.DisplayName
}

func (o *WebhookEventTypeResponse) GetDescription() string {
	if o == nil {
		return ""
	}
	return o.Description
}

func (o *WebhookEventTypeResponse) GetIsActive() *bool {
	if o == nil {
		return nil
	}
	return o.IsActive
}

func (o *WebhookEventTypeResponse) GetDeprecatedOnUtc() *time.Time {
	if o == nil {
		return nil
	}
	return o.DeprecatedOnUtc
}
