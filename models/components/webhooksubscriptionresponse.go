// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/buildwithdeck/sdk-go/internal/utils"
	"time"
)

type WebhookSubscriptionResponse struct {
	ID               string                   `json:"id"`
	TeamGUID         string                   `json:"team_guid"`
	TeamName         string                   `json:"team_name"`
	WebhookEventType WebhookEventTypeResponse `json:"webhook_event_type"`
	IsSubscribed     *bool                    `json:"is_subscribed,omitempty"`
	CreatedOnUtc     *time.Time               `json:"created_on_utc,omitempty"`
	ModifiedOnUtc    *time.Time               `json:"modified_on_utc,omitempty"`
}

func (w WebhookSubscriptionResponse) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(w, "", false)
}

func (w *WebhookSubscriptionResponse) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &w, "", false, []string{"id", "team_guid", "team_name", "webhook_event_type"}); err != nil {
		return err
	}
	return nil
}

func (o *WebhookSubscriptionResponse) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *WebhookSubscriptionResponse) GetTeamGUID() string {
	if o == nil {
		return ""
	}
	return o.TeamGUID
}

func (o *WebhookSubscriptionResponse) GetTeamName() string {
	if o == nil {
		return ""
	}
	return o.TeamName
}

func (o *WebhookSubscriptionResponse) GetWebhookEventType() WebhookEventTypeResponse {
	if o == nil {
		return WebhookEventTypeResponse{}
	}
	return o.WebhookEventType
}

func (o *WebhookSubscriptionResponse) GetIsSubscribed() *bool {
	if o == nil {
		return nil
	}
	return o.IsSubscribed
}

func (o *WebhookSubscriptionResponse) GetCreatedOnUtc() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedOnUtc
}

func (o *WebhookSubscriptionResponse) GetModifiedOnUtc() *time.Time {
	if o == nil {
		return nil
	}
	return o.ModifiedOnUtc
}
