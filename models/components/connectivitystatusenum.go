// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type ConnectivityStatusEnum string

const (
	ConnectivityStatusEnumNew          ConnectivityStatusEnum = "New"
	ConnectivityStatusEnumConnecting   ConnectivityStatusEnum = "Connecting"
	ConnectivityStatusEnumConnected    ConnectivityStatusEnum = "Connected"
	ConnectivityStatusEnumDisconnected ConnectivityStatusEnum = "Disconnected"
	ConnectivityStatusEnumError        ConnectivityStatusEnum = "Error"
)

func (e ConnectivityStatusEnum) ToPointer() *ConnectivityStatusEnum {
	return &e
}
func (e *ConnectivityStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "New":
		fallthrough
	case "Connecting":
		fallthrough
	case "Connected":
		fallthrough
	case "Disconnected":
		fallthrough
	case "Error":
		*e = ConnectivityStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ConnectivityStatusEnum: %v", v)
	}
}
